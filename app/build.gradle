plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.schnup.iobrokerw"
        minSdk 26
        targetSdk 30
        versionCode 2
        versionName "2.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            //useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            //useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        //useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.7.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.schnup.iobrokerw'
}

dependencies {

    // TODO: Review Dependencies
    // General Compose dependencies
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    // Compose for Wear OS Dependencies
    implementation "androidx.wear.compose:compose-material:$wear_compose_version"

    // Foundation is additive, so you can use the mobile version in your Wear OS app.
    implementation "androidx.wear.compose:compose-foundation:$wear_compose_version"

    // If you are using Compose Navigation, use the Wear OS version (NOT the
    // androidx.navigation:navigation-compose version), that is, uncomment the line below.
    // implementation "androidx.wear.compose:compose-navigation:$wear_compose_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Custom
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.wear.compose:compose-material:1.2.0-alpha01'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'androidx.wear:wear-input:1.1.0'

    implementation "com.squareup.okhttp3:okhttp:4.10.0"

}
